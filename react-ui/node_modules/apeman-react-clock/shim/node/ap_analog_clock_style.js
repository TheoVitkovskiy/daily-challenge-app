/**
 * Style for ApAnalogClock.
 * @class ApAnalogClockStyle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _apemanReactStyle = require('apeman-react-style');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** @lends ApAnalogClockStyle */
var ApAnalogClockStyle = _react2.default.createClass({
  displayName: 'ApAnalogClockStyle',

  propTypes: {
    style: _react.PropTypes.object,
    width: _react.PropTypes.number,
    height: _react.PropTypes.number,
    color: _react.PropTypes.string,
    accentColor: _react.PropTypes.string,
    backgroundColor: _react.PropTypes.string
  },
  getDefaultProps: function getDefaultProps() {
    return {
      style: {},
      width: 320,
      height: 240,
      color: '#333',
      accentColor: '#F33',
      backgroundColor: '#FFF'
    };
  },

  statics: {
    styleData: function styleData(config) {
      var width = config.width;
      var height = config.height;
      var color = config.color;
      var accentColor = config.accentColor;
      var backgroundColor = config.backgroundColor;

      var boardPadding = 18;
      return {
        all: {
          '.ap-analog-clock': {
            width: width,
            height: height,
            display: 'block',
            margin: '0 auto',
            textAlign: 'center',
            position: 'relative'
          },
          '.ap-analog-clock-board': {
            width: '100%',
            height: '100%',
            border: '2px solid ' + color,
            display: 'inline-block',
            position: 'relative',
            borderRadius: '50%',
            backgroundColor: '' + backgroundColor
          },
          '.ap-analog-clock-board-inner': {
            position: 'absolute',
            left: boardPadding,
            top: boardPadding,
            right: boardPadding,
            bottom: boardPadding
          },
          '.ap-analog-letter': {
            height: '50%',
            width: '10%',
            position: 'absolute',
            left: '45%',
            top: 0,
            display: 'inline-block',
            transformOrigin: '50% 100%'
          },
          '.ap-analog-letter-title': {
            position: 'absolute',
            left: 0,
            top: '4px',
            display: 'inline-block'
          },
          '.ap-analog-clock-hand': {
            height: '50%',
            width: '10%',
            position: 'absolute',
            left: '45%',
            top: 0,
            display: 'inline-block',
            transformOrigin: '50% 100%'
          },
          '.ap-analog-clock-hand-bar-container': {
            position: 'absolute',
            left: 0,
            top: 0,
            right: 0,
            bottom: -8,
            display: 'inline-block',
            textAlign: 'center'
          },
          '.ap-analog-clock-hand-bar': {
            background: '' + color,
            width: 24,
            height: '100%',
            borderRadius: '1px',
            display: 'inline-block'
          },
          '.ap-analog-clock-hand-second .ap-analog-clock-hand-bar': {
            background: '' + accentColor
          },
          '.ap-analog-clock-screw-container': {
            display: 'block',
            position: 'absolute',
            left: '40%',
            right: '40%',
            width: '20%',
            bottom: '50%',
            textAlign: 'center'
          },
          '.ap-analog-clock-screw': {
            position: 'relative',
            display: 'inline-block',
            borderRadius: '50%',
            background: '' + accentColor
          }
        }
      };
    }
  },
  render: function render() {
    var s = this;
    var props = s.props;

    var _ApAnalogClockStyle$s = ApAnalogClockStyle.styleData(props);

    var all = _ApAnalogClockStyle$s.all;
    var small = _ApAnalogClockStyle$s.small;
    var medium = _ApAnalogClockStyle$s.medium;
    var large = _ApAnalogClockStyle$s.large;


    return _react2.default.createElement(
      _apemanReactStyle.ApStyle,
      { data: Object.assign(all, props.style),
        smallMediaData: small,
        mediumMediaData: medium,
        largeMediaData: large
      },
      props.children
    );
  }
});

exports.default = ApAnalogClockStyle;
//# sourceMappingURL=data:application/json;base64,bnVsbA==